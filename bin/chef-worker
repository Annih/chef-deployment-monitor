#!/usr/bin/env ruby
#
# Author:: Sander Botman (<sander.botman@gmail.com>)
# Copyright:: Copyright (c) 2014 Sander Botman.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_worker"
require 'rubygems'
require 'bunny'
require 'json'
require 'daemons'

config=nil
populate=nil
debug=false
opt=0
ARGV.each do |arg|
  config = ARGV[opt+1] if arg == "-C" || arg == "--config"
  populate = ARGV[opt+1] if arg == "-O" 
  debug = true if arg == "--debug"
  opt+=1
end

if config.nil?
  puts "Please enter the configuration file with the option -C or --config"
  exit 1
else
  Monitor::Config.from_file(config)
  [ "mq_queue", "mq_server", "download_path", "node_name", "client_key", "chef_url", "pid_dir", "log_dir" ].each do |item|
    if Monitor::Config[item.to_sym].empty?
      puts "Missing item: #{item} within the configuration file!"
      exit 1
    end
  end
end    

ALLOWED_OBJECTS = ['users', 'cookbooks','roles','environments','clients','nodes','groups','data']
DOWNLOAD_PATH   = Monitor::Config[:download_path]
DEBUG           = debug
Chef::Config[:node_name]  = Monitor::Config[:node_name]
Chef::Config[:client_key] = Monitor::Config[:client_key]

@options = {
  :log_output => true,
  :dir_mode => :normal,
  :dir => Monitor::Config[:pid_dir],
  :log_dir => Monitor::Config[:log_dir]
}

unless populate.nil?
  Chef::Config[:chef_server_url] = Monitor::Config[:chef_url] + "/organizations/#{populate}"
  ALLOWED_OBJECTS.each do |object|
    data = {}
    data['object'] = object
    data['action'] = 'POST'
    data['org']    = populate
    data['time']   = Time.now
    data['user']   = 'chef-worker'
    data['server'] = ENV['HOSTNAME']
    pop = Monitor::Item.new(data)
    obj = Monitor::ItemList.new(data)
    obj.each do |item|
      item.download(DOWNLOAD_PATH)
    end
    pop.commit_nohook(DOWNLOAD_PATH)
  end
  exit 0
end

Daemons.run_proc('chef-worker', @options) do
  worker = Monitor::Worker.new
  worker.run()
end

